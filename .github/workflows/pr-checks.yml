name: PR Checks

on:
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  id-token: write # ‚Üê OIDC„ÅßÂøÖË¶Å

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Disable husky
        run: git config core.hooksPath /dev/null

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061
        with:
          version: 10.17.1

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm -r build

      - name: Type check
        run: pnpm -r exec tsc --noEmit
        continue-on-error: false

      - name: Run tests
        run: pnpm run test
        continue-on-error: false
        
      - name: Format & Lint changed files
        shell: bash
        run: |
          mapfile -t CHANGED_FILES < <(
            git diff --name-only --diff-filter=ACMR origin/main...HEAD | grep -E '\.(js|ts|jsx|tsx)$'
          )

          if [ ${#CHANGED_FILES[@]} -gt 0 ]; then
            echo "Changed files: ${CHANGED_FILES[@]}"

            pnpm exec biome format --write "${CHANGED_FILES[@]}"
            pnpm exec biome lint --write --no-errors-on-unmatched "${CHANGED_FILES[@]}"
            git add "${CHANGED_FILES[@]}"
          else
            echo "No JS/TS/JSX/TSX files changed"
          fi

      - name: Check if formatting or linting changed files
        id: format-check
        run: |
          if git diff --cached --quiet; then
            echo "formatted=false" >> $GITHUB_OUTPUT
          else
            echo "formatted=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatting & lint fixes
        if: steps.format-check.outputs.formatted == 'true'
        run: |
          git config core.hooksPath /dev/null
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "style: auto-format and lint fixes [skip ci]"
          git push

      - name: Comment on PR if formatted
        if: steps.format-check.outputs.formatted == 'true'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üé® Code has been automatically formatted and linted.'
            })
